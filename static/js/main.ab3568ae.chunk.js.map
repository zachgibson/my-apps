{"version":3,"sources":["balllr.mp4","particles.mp4","will-smith.MP4","camera.mp4","iridescent.mp4","react-native-twitter-moments.MP4","slider.mp4","local-to-ip.mp4","calculator.mp4","bubbles.mp4","golden-hour.mp4","master-class.mp4","nike-parallax.mp4","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Video","_ref","title","link","url","isPortrait","react_default","a","createElement","Fragment","style","marginBottom","href","target","position","marginLeft","marginRight","paddingTop","ReactPlayer_default","controls","className","width","height","App","maxWidth","marginTop","App_Video","localToIP","calculator","balllr","willSmith","masterClass","camera","bubbles","nikeParallax","particles","slider","reactNativeTwitterMoments","iridescent","goldenHour","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab3568ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/balllr.f2804054.mp4\";","module.exports = __webpack_public_path__ + \"static/media/particles.f5ac1766.mp4\";","module.exports = __webpack_public_path__ + \"static/media/will-smith.40fdc211.MP4\";","module.exports = __webpack_public_path__ + \"static/media/camera.77515f63.mp4\";","module.exports = __webpack_public_path__ + \"static/media/iridescent.7131f155.mp4\";","module.exports = __webpack_public_path__ + \"static/media/react-native-twitter-moments.673816d0.MP4\";","module.exports = __webpack_public_path__ + \"static/media/slider.bf6d01fa.mp4\";","module.exports = __webpack_public_path__ + \"static/media/local-to-ip.a05dce56.mp4\";","module.exports = __webpack_public_path__ + \"static/media/calculator.a283d7a0.mp4\";","module.exports = __webpack_public_path__ + \"static/media/bubbles.5a497ad7.mp4\";","module.exports = __webpack_public_path__ + \"static/media/golden-hour.dc6d466f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/master-class.b92012a1.mp4\";","module.exports = __webpack_public_path__ + \"static/media/nike-parallax.6cf7499d.mp4\";","import React, { Component } from \"react\";\nimport ReactPlayer from \"react-player\";\n\nimport \"./App.css\";\nimport balllr from \"./balllr.mp4\";\nimport particles from \"./particles.mp4\";\nimport willSmith from \"./will-smith.MP4\";\nimport camera from \"./camera.mp4\";\nimport iridescent from \"./iridescent.mp4\";\nimport reactNativeTwitterMoments from \"./react-native-twitter-moments.MP4\";\nimport slider from \"./slider.mp4\";\nimport localToIP from \"./local-to-ip.mp4\";\nimport calculator from \"./calculator.mp4\";\nimport bubbles from \"./bubbles.mp4\";\nimport goldenHour from \"./golden-hour.mp4\";\nimport masterClass from \"./master-class.mp4\";\nimport nikeParallax from \"./nike-parallax.mp4\";\n\nconst Video = ({ title, link, url, isPortrait }) => (\n  <React.Fragment>\n    <h2>{title}</h2>\n    {link && (\n      <div style={{ marginBottom: 24 }}>\n        <a href={link} target=\"_blank\">\n           App Store Link ↗\n        </a>\n      </div>\n    )}\n    <div\n      style={{\n        position: \"relative\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        paddingTop: isPortrait ? \"75%\" : \"50%\",\n        marginBottom: 160\n      }}\n    >\n      <ReactPlayer\n        controls\n        className=\"react-player\"\n        url={url}\n        width=\"100%\"\n        height=\"100%\"\n      />\n    </div>\n  </React.Fragment>\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: 80\n        }}\n      >\n        <Video title=\"Objective-C\" url={localToIP} isPortrait={false} />\n        <Video title=\"Swift\" url={calculator} isPortrait={false} />\n        <Video title=\"React Native\" url={balllr} isPortrait={true} />\n        <Video\n          title=\"React Native\"\n          url={willSmith}\n          isPortrait={true}\n          link=\"https://itunes.apple.com/us/app/will-smith-official-app/id1080053724?mt=8\"\n        />\n        <Video title=\"React Native\" url={masterClass} isPortrait={true} />\n        <Video title=\"React Native\" url={camera} isPortrait={false} />\n        <Video title=\"React Native\" url={bubbles} isPortrait={true} />\n        <Video title=\"React Native\" url={nikeParallax} isPortrait={true} />\n        <Video title=\"React Native\" url={particles} isPortrait={true} />\n        <Video title=\"React Native\" url={slider} isPortrait={true} />\n        <Video\n          title=\"React Native\"\n          url={reactNativeTwitterMoments}\n          isPortrait={false}\n        />\n        <Video title=\"React Native\" url={iridescent} isPortrait={false} />\n        <Video title=\"React Native\" url={goldenHour} isPortrait={true} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}